Given a list of InputLine objects create a HashMap<convID, Conversation> in such a way that each conversation object contains a list of InputLine object in the same order as in the original input list. Only inputLine objects with matching convID can belong to the same conversation. Use the previously provided definitions of InputLine and Conversation classes.

import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;

public class Conversation {
    String convID;
    List<InputLine> inputLines;

    public Conversation(String convID) {
        this.convID = convID;
        this.inputLines = new ArrayList<>();
    }

    public void addInputLine(InputLine inputLine) {
        this.inputLines.add(inputLine);
    }

    // ... (other class members and methods)
}

public HashMap<String, Conversation> createConversationMap(List<InputLine> inputLines) {
    HashMap<String, Conversation> conversationMap = new HashMap<>();

    for (InputLine inputLine : inputLines) {
        String convID = inputLine.convID;
        Conversation conversation = conversationMap.get(convID);

        if (conversation == null) {
            conversation = new Conversation(convID);
            conversationMap.put(convID, conversation);
        }

        conversation.addInputLine(inputLine);
    }

    return conversationMap;
}

==================================================================

Given the ConversationMap just created, go through it and call the method createTransitionFrameBand for each conversation in the conversationMap

import java.util.HashMap;
import java.util.Map;

public void processConversations(HashMap<String, Conversation> conversationMap) {
    for (Map.Entry<String, Conversation> entry : conversationMap.entrySet()) {
        Conversation conversation = entry.getValue();
        conversation.createTransitionFrameBand();
    }
}


====================================================================

Given:
	String text;
    List<List<TransitionFrame>> transitionFrameBandList;

where:

public class TransitionFrame {
    String text;
    int start;
    int end;
    int length;
    String type;

    public TransitionFrame(String text, int start, int end, String type) {
        this.text = text;
        this.start = start;
        this.end = end;
        this.length = end - start;
        this.type = type;
    }
}

write this method:
	public List<TransitionFrame> bandsContainFrame(String text, transitionFrameBandList)

which returns the TransitionFrame that contains "text" or null if the text is not present in any of the TransitionFrame objects in transitionFrameBandList

=============================================================
import java.util.List;

public List<TransitionFrame> bandsContainFrame(String text, List<List<TransitionFrame>> transitionFrameBandList) {
    for (List<TransitionFrame> band : transitionFrameBandList) {
        for (TransitionFrame frame : band) {
            if (frame.text.contains(text)) {
                return band;
            }
        }
    }
    return null;
}
	