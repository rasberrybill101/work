Given a csv file with header:
convID,is_complaint,earliest_detected_transition,token_count,zeros,ones,zerod,oned
where convID is a string, is_complaint, earliest_detected_transition, token_count, zeros, ones are integers, and zerod, oned are floating point values
In python, create the following scatter plots:
1) earliest_detected_transition (x-axis) vs token_count (y-axis)
2) zeros (x-axis) vs ones (y-axis)
3) zerod (x-axis) vs oned (y-axis)
4) earliest_detected_transition (x-axis) vs zerod (y-axis)
5) earliest_detected_transition (x-axis) vs 5*zerod (y-axis)

use a red dot to mark the position of each convID that has is_complaint=0
use a blue dot to mark the position of each convID that has is_complaint=1
Show the convID when the mouse is over a dot

import pandas as pd
import matplotlib.pyplot as plt

# Read the csv file
df = pd.read_csv('data.csv')

# Separate the data based on 'is_complaint' value
df_0 = df[df['is_complaint'] == 0]
df_1 = df[df['is_complaint'] == 1]

# Create scatter plots
def create_plot(x_0, y_0, x_1, y_1, xlabel, ylabel):
    plt.figure(figsize=(10, 8))
    plt.scatter(x_0, y_0, color='red', label='is_complaint=0')
    plt.scatter(x_1, y_1, color='blue', label='is_complaint=1')
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.legend()
    plt.show()

# earliest_detected_transition vs token_count
create_plot(df_0['earliest_detected_transition'], df_0['token_count'], 
            df_1['earliest_detected_transition'], df_1['token_count'], 
            'earliest_detected_transition', 'token_count')

# zeros vs ones
create_plot(df_0['zeros'], df_0['ones'], df_1['zeros'], df_1['ones'], 'zeros', 'ones')

# zerod vs oned
create_plot(df_0['zerod'], df_0['oned'], df_1['zerod'], df_1['oned'], 'zerod', 'oned')

# earliest_detected_transition vs zerod
create_plot(df_0['earliest_detected_transition'], df_0['zerod'], 
            df_1['earliest_detected_transition'], df_1['zerod'], 
            'earliest_detected_transition', 'zerod')

# earliest_detected_transition vs 5*zerod
create_plot(df_0['earliest_detected_transition'], 5*df_0['zerod'], 
            df_1['earliest_detected_transition'], 5*df_1['zerod'], 
            'earliest_detected_transition', '5*zerod')


========================= interactive plotly version to mouse over convID
import pandas as pd
import plotly.express as px

# Read the csv file
df = pd.read_csv('data.csv')

# Create a color column based on 'is_complaint' value
df['color'] = df['is_complaint'].apply(lambda x: 'red' if x == 0 else 'blue')

# Define a function to create a scatter plot
def create_plot(x, y):
    fig = px.scatter(df, x=x, y=y, color='color', hover_data=['convID'])
    fig.show()

# earliest_detected_transition vs token_count
create_plot('earliest_detected_transition', 'token_count')

# zeros vs ones
create_plot('zeros', 'ones')

# zerod vs oned
create_plot('zerod', 'oned')

# earliest_detected_transition vs zerod
create_plot('earliest_detected_transition', 'zerod')

# earliest_detected_transition vs 5*zerod
df['5*zerod'] = 5 * df['zerod']
create_plot('earliest_detected_transition', '5*zerod')
