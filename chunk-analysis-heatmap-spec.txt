Given a CSV file with header:
convID, expected, predicted, position, history, chunk, chunkStart, frameLength, spread
where
convID is String
expectd is int
predicted is int
position is int
history is String
chunk is String
chunkStart is int
frameLength is int
spread is a float

Using python, create a heatmap from the data where:
the rows are the convIDs
the columns are:
col 1) 1 if expected == predicted otherwise 0. The color of col 1 should be black if 1 and red if 0
col 2) max position for a given convID, with column name "bands". heatmap color is blue
col 3) min value of chunkStart for a given convID, with column name "earliestStart". heatmap color is blue.
col 4) min value of spread for a given convID, with col name "spread". heatmap color is yellow
col 5) sum of values of frameLength for given convID, with name "frameLength". heatmap color is green.

Darker colors imply higher values.

=========================================================
iteration 1
=========================================================
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the CSV file
df = pd.read_csv('your_file.csv')

# Compute the new columns
df['correct'] = (df['expected'] == df['predicted']).astype(int)
grouped = df.groupby('convID').agg({
    'correct': 'mean', 
    'position': 'max', 
    'chunkStart': 'min', 
    'spread': 'min', 
    'frameLength': 'sum'
}).rename(columns={
    'correct': 'correct',
    'position': 'bands',
    'chunkStart': 'earliestStart',
    'spread': 'spread',
    'frameLength': 'frameLength'
})

# Create a colormap for each column
cmap = {
    'correct': sns.color_palette("coolwarm", as_cmap=True),
    'bands': sns.color_palette("Blues", as_cmap=True),
    'earliestStart': sns.color_palette("Blues", as_cmap=True),
    'spread': sns.color_palette("YlOrBr", as_cmap=True),
    'frameLength': sns.color_palette("Greens", as_cmap=True)
}

# Plot each column separately
for col in grouped.columns:
    plt.figure(figsize=(10, 8))
    sns.heatmap(grouped[[col]], cmap=cmap[col], vmin=0)
    plt.title(col)
    plt.show()